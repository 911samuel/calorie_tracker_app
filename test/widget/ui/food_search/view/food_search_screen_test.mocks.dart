// Mocks generated by Mockito 5.4.6 from annotations
// in calorie_tracker_app/test/widget/ui/food_search/view/food_search_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:ui' as _i8;

import 'package:calorie_tracker_app/domain/models/food.dart' as _i5;
import 'package:calorie_tracker_app/ui/food_search/view_model/calorie_tracking_view_model.dart'
    as _i4;
import 'package:calorie_tracker_app/ui/food_search/view_model/food_search_view_model.dart'
    as _i9;
import 'package:flutter/material.dart' as _i2;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDateTime_0 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeChangeNotifierProvider_1<NotifierT extends _i2.ChangeNotifier?>
    extends _i1.SmartFake
    implements _i3.ChangeNotifierProvider<NotifierT> {
  _FakeChangeNotifierProvider_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CalorieTrackingViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalorieTrackingViewModel extends _i1.Mock
    implements _i4.CalorieTrackingViewModel {
  MockCalorieTrackingViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  List<_i5.Food> get searchResults =>
      (super.noSuchMethod(
            Invocation.getter(#searchResults),
            returnValue: <_i5.Food>[],
          )
          as List<_i5.Food>);

  @override
  DateTime get selectedDate =>
      (super.noSuchMethod(
            Invocation.getter(#selectedDate),
            returnValue: _FakeDateTime_0(
              this,
              Invocation.getter(#selectedDate),
            ),
          )
          as DateTime);

  @override
  String get selectedMealType =>
      (super.noSuchMethod(
            Invocation.getter(#selectedMealType),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#selectedMealType),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i7.Future<void> loadDailySummary([DateTime? date]) =>
      (super.noSuchMethod(
            Invocation.method(#loadDailySummary, [date]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> searchFoods(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchFoods, [query]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<bool> addFoodToMeal(_i5.Food? food, double? amount) =>
      (super.noSuchMethod(
            Invocation.method(#addFoodToMeal, [food, amount]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<void> removeFoodFromMeal(int? trackedFoodId) =>
      (super.noSuchMethod(
            Invocation.method(#removeFoodFromMeal, [trackedFoodId]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  void setSelectedDate(DateTime? date) => super.noSuchMethod(
    Invocation.method(#setSelectedDate, [date]),
    returnValueForMissingStub: null,
  );

  @override
  void setSelectedMealType(String? mealType) => super.noSuchMethod(
    Invocation.method(#setSelectedMealType, [mealType]),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<void> pickDate(_i2.BuildContext? context) =>
      (super.noSuchMethod(
            Invocation.method(#pickDate, [context]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  void clearSearchResults() => super.noSuchMethod(
    Invocation.method(#clearSearchResults, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [FoodSearchViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockFoodSearchViewModel extends _i1.Mock
    implements _i9.FoodSearchViewModel {
  MockFoodSearchViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ChangeNotifierProvider<_i9.FoodSearchViewModel> get foodSearchProvider =>
      (super.noSuchMethod(
            Invocation.getter(#foodSearchProvider),
            returnValue: _FakeChangeNotifierProvider_1<_i9.FoodSearchViewModel>(
              this,
              Invocation.getter(#foodSearchProvider),
            ),
          )
          as _i3.ChangeNotifierProvider<_i9.FoodSearchViewModel>);

  @override
  bool get isAdding =>
      (super.noSuchMethod(Invocation.getter(#isAdding), returnValue: false)
          as bool);

  @override
  List<_i5.Food> get foods =>
      (super.noSuchMethod(Invocation.getter(#foods), returnValue: <_i5.Food>[])
          as List<_i5.Food>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  String get lastQuery =>
      (super.noSuchMethod(
            Invocation.getter(#lastQuery),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#lastQuery),
            ),
          )
          as String);

  @override
  bool get hasResults =>
      (super.noSuchMethod(Invocation.getter(#hasResults), returnValue: false)
          as bool);

  @override
  bool get hasError =>
      (super.noSuchMethod(Invocation.getter(#hasError), returnValue: false)
          as bool);

  @override
  bool get isEmpty =>
      (super.noSuchMethod(Invocation.getter(#isEmpty), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i7.Future<void> searchFoods(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchFoods, [query]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  void clearResults() => super.noSuchMethod(
    Invocation.method(#clearResults, []),
    returnValueForMissingStub: null,
  );

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<void> retryLastSearch() =>
      (super.noSuchMethod(
            Invocation.method(#retryLastSearch, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<bool> addFoodToMeal({
    required dynamic food,
    required String? amountStr,
    required String? mealType,
    required DateTime? selectedDate,
    required _i3.WidgetRef? ref,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#addFoodToMeal, [], {
              #food: food,
              #amountStr: amountStr,
              #mealType: mealType,
              #selectedDate: selectedDate,
              #ref: ref,
            }),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
