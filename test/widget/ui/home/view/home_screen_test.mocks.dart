// Mocks generated by Mockito 5.4.6 from annotations
// in calorie_tracker_app/test/widget/ui/home/view/home_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i8;

import 'package:calorie_tracker_app/domain/models/daily_summary.dart' as _i12;
import 'package:calorie_tracker_app/domain/models/food.dart' as _i10;
import 'package:calorie_tracker_app/domain/models/food_item.dart' as _i3;
import 'package:calorie_tracker_app/domain/models/meal_summary.dart' as _i13;
import 'package:calorie_tracker_app/domain/models/tracked_food.dart' as _i14;
import 'package:calorie_tracker_app/domain/use_cases/calculate_nutrients_usecase.dart'
    as _i5;
import 'package:calorie_tracker_app/ui/food_search/view_model/calorie_tracking_view_model.dart'
    as _i9;
import 'package:calorie_tracker_app/ui/home/view_model/home_viewmodel.dart'
    as _i4;
import 'package:flutter/material.dart' as _i7;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRef_0<State extends Object?> extends _i1.SmartFake
    implements _i2.Ref<State> {
  _FakeRef_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDateTime_1 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFoodItem_2 extends _i1.SmartFake implements _i3.FoodItem {
  _FakeFoodItem_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [HomeViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeViewModel extends _i1.Mock implements _i4.HomeViewModel {
  MockHomeViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Ref<Object?> get ref =>
      (super.noSuchMethod(
            Invocation.getter(#ref),
            returnValue: _FakeRef_0<Object?>(this, Invocation.getter(#ref)),
          )
          as _i2.Ref<Object?>);

  @override
  DateTime get selectedDate =>
      (super.noSuchMethod(
            Invocation.getter(#selectedDate),
            returnValue: _FakeDateTime_1(
              this,
              Invocation.getter(#selectedDate),
            ),
          )
          as DateTime);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  set selectedDate(DateTime? _selectedDate) => super.noSuchMethod(
    Invocation.setter(#selectedDate, _selectedDate),
    returnValueForMissingStub: null,
  );

  @override
  set nutrientGoalResult(_i5.NutrientGoalResult? _nutrientGoalResult) =>
      super.noSuchMethod(
        Invocation.setter(#nutrientGoalResult, _nutrientGoalResult),
        returnValueForMissingStub: null,
      );

  @override
  set isLoading(bool? _isLoading) => super.noSuchMethod(
    Invocation.setter(#isLoading, _isLoading),
    returnValueForMissingStub: null,
  );

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void incrementDate() => super.noSuchMethod(
    Invocation.method(#incrementDate, []),
    returnValueForMissingStub: null,
  );

  @override
  void decrementDate() => super.noSuchMethod(
    Invocation.method(#decrementDate, []),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> selectDate(_i7.BuildContext? context) =>
      (super.noSuchMethod(
            Invocation.method(#selectDate, [context]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> addFood(_i7.BuildContext? context, String? mealType) =>
      (super.noSuchMethod(
            Invocation.method(#addFood, [context, mealType]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void removeFoodFromMeal(int? trackedFoodId) => super.noSuchMethod(
    Invocation.method(#removeFoodFromMeal, [trackedFoodId]),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, double> calculateTotals(dynamic dailySummary) =>
      (super.noSuchMethod(
            Invocation.method(#calculateTotals, [dailySummary]),
            returnValue: <String, double>{},
          )
          as Map<String, double>);

  @override
  List<Map<String, dynamic>> buildMealData(dynamic dailySummary) =>
      (super.noSuchMethod(
            Invocation.method(#buildMealData, [dailySummary]),
            returnValue: <Map<String, dynamic>>[],
          )
          as List<Map<String, dynamic>>);

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [CalorieTrackingViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalorieTrackingViewModel extends _i1.Mock
    implements _i9.CalorieTrackingViewModel {
  MockCalorieTrackingViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  List<_i10.Food> get searchResults =>
      (super.noSuchMethod(
            Invocation.getter(#searchResults),
            returnValue: <_i10.Food>[],
          )
          as List<_i10.Food>);

  @override
  DateTime get selectedDate =>
      (super.noSuchMethod(
            Invocation.getter(#selectedDate),
            returnValue: _FakeDateTime_1(
              this,
              Invocation.getter(#selectedDate),
            ),
          )
          as DateTime);

  @override
  String get selectedMealType =>
      (super.noSuchMethod(
            Invocation.getter(#selectedMealType),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#selectedMealType),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i6.Future<void> loadDailySummary([DateTime? date]) =>
      (super.noSuchMethod(
            Invocation.method(#loadDailySummary, [date]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> searchFoods(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchFoods, [query]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<bool> addFoodToMeal(_i10.Food? food, double? amount) =>
      (super.noSuchMethod(
            Invocation.method(#addFoodToMeal, [food, amount]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<void> removeFoodFromMeal(int? trackedFoodId) =>
      (super.noSuchMethod(
            Invocation.method(#removeFoodFromMeal, [trackedFoodId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void setSelectedDate(DateTime? date) => super.noSuchMethod(
    Invocation.method(#setSelectedDate, [date]),
    returnValueForMissingStub: null,
  );

  @override
  void setSelectedMealType(String? mealType) => super.noSuchMethod(
    Invocation.method(#setSelectedMealType, [mealType]),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> pickDate(_i7.BuildContext? context) =>
      (super.noSuchMethod(
            Invocation.method(#pickDate, [context]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void clearSearchResults() => super.noSuchMethod(
    Invocation.method(#clearSearchResults, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [DailySummary].
///
/// See the documentation for Mockito's code generation for more information.
class MockDailySummary extends _i1.Mock implements _i12.DailySummary {
  MockDailySummary() {
    _i1.throwOnMissingStub(this);
  }

  @override
  DateTime get date =>
      (super.noSuchMethod(
            Invocation.getter(#date),
            returnValue: _FakeDateTime_1(this, Invocation.getter(#date)),
          )
          as DateTime);

  @override
  List<_i13.MealSummary> get meals =>
      (super.noSuchMethod(
            Invocation.getter(#meals),
            returnValue: <_i13.MealSummary>[],
          )
          as List<_i13.MealSummary>);

  @override
  int get totalCalories =>
      (super.noSuchMethod(Invocation.getter(#totalCalories), returnValue: 0)
          as int);

  @override
  double get totalProtein =>
      (super.noSuchMethod(Invocation.getter(#totalProtein), returnValue: 0.0)
          as double);

  @override
  double get totalCarbs =>
      (super.noSuchMethod(Invocation.getter(#totalCarbs), returnValue: 0.0)
          as double);

  @override
  double get totalFat =>
      (super.noSuchMethod(Invocation.getter(#totalFat), returnValue: 0.0)
          as double);
}

/// A class which mocks [MealSummary].
///
/// See the documentation for Mockito's code generation for more information.
class MockMealSummary extends _i1.Mock implements _i13.MealSummary {
  MockMealSummary() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get mealType =>
      (super.noSuchMethod(
            Invocation.getter(#mealType),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#mealType),
            ),
          )
          as String);

  @override
  List<_i14.TrackedFood> get foods =>
      (super.noSuchMethod(
            Invocation.getter(#foods),
            returnValue: <_i14.TrackedFood>[],
          )
          as List<_i14.TrackedFood>);

  @override
  int get totalCalories =>
      (super.noSuchMethod(Invocation.getter(#totalCalories), returnValue: 0)
          as int);

  @override
  double get totalProtein =>
      (super.noSuchMethod(Invocation.getter(#totalProtein), returnValue: 0.0)
          as double);

  @override
  double get totalCarbs =>
      (super.noSuchMethod(Invocation.getter(#totalCarbs), returnValue: 0.0)
          as double);

  @override
  double get totalFat =>
      (super.noSuchMethod(Invocation.getter(#totalFat), returnValue: 0.0)
          as double);
}

/// A class which mocks [TrackedFood].
///
/// See the documentation for Mockito's code generation for more information.
class MockTrackedFood extends _i1.Mock implements _i14.TrackedFood {
  MockTrackedFood() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
          )
          as String);

  @override
  double get amount =>
      (super.noSuchMethod(Invocation.getter(#amount), returnValue: 0.0)
          as double);

  @override
  int get calories =>
      (super.noSuchMethod(Invocation.getter(#calories), returnValue: 0) as int);

  @override
  double get protein =>
      (super.noSuchMethod(Invocation.getter(#protein), returnValue: 0.0)
          as double);

  @override
  double get carbs =>
      (super.noSuchMethod(Invocation.getter(#carbs), returnValue: 0.0)
          as double);

  @override
  double get fat =>
      (super.noSuchMethod(Invocation.getter(#fat), returnValue: 0.0) as double);

  @override
  DateTime get date =>
      (super.noSuchMethod(
            Invocation.getter(#date),
            returnValue: _FakeDateTime_1(this, Invocation.getter(#date)),
          )
          as DateTime);

  @override
  String get mealType =>
      (super.noSuchMethod(
            Invocation.getter(#mealType),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#mealType),
            ),
          )
          as String);

  @override
  Map<String, dynamic> toMap() =>
      (super.noSuchMethod(
            Invocation.method(#toMap, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [FoodItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockFoodItem extends _i1.Mock implements _i3.FoodItem {
  MockFoodItem() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
          )
          as String);

  @override
  String get weight =>
      (super.noSuchMethod(
            Invocation.getter(#weight),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#weight),
            ),
          )
          as String);

  @override
  int get calories =>
      (super.noSuchMethod(Invocation.getter(#calories), returnValue: 0) as int);

  @override
  double get carbs =>
      (super.noSuchMethod(Invocation.getter(#carbs), returnValue: 0.0)
          as double);

  @override
  double get protein =>
      (super.noSuchMethod(Invocation.getter(#protein), returnValue: 0.0)
          as double);

  @override
  double get fat =>
      (super.noSuchMethod(Invocation.getter(#fat), returnValue: 0.0) as double);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i3.FoodItem copyWith({
    String? name,
    String? weight,
    int? calories,
    double? carbs,
    double? protein,
    double? fat,
    String? imagePath,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#copyWith, [], {
              #name: name,
              #weight: weight,
              #calories: calories,
              #carbs: carbs,
              #protein: protein,
              #fat: fat,
              #imagePath: imagePath,
            }),
            returnValue: _FakeFoodItem_2(
              this,
              Invocation.method(#copyWith, [], {
                #name: name,
                #weight: weight,
                #calories: calories,
                #carbs: carbs,
                #protein: protein,
                #fat: fat,
                #imagePath: imagePath,
              }),
            ),
          )
          as _i3.FoodItem);
}

/// A class which mocks [NutrientGoalResult].
///
/// See the documentation for Mockito's code generation for more information.
class MockNutrientGoalResult extends _i1.Mock
    implements _i5.NutrientGoalResult {
  MockNutrientGoalResult() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get caloriesGoal =>
      (super.noSuchMethod(Invocation.getter(#caloriesGoal), returnValue: 0)
          as int);

  @override
  int get carbsGoal =>
      (super.noSuchMethod(Invocation.getter(#carbsGoal), returnValue: 0)
          as int);

  @override
  int get proteinGoal =>
      (super.noSuchMethod(Invocation.getter(#proteinGoal), returnValue: 0)
          as int);

  @override
  int get fatGoal =>
      (super.noSuchMethod(Invocation.getter(#fatGoal), returnValue: 0) as int);
}
